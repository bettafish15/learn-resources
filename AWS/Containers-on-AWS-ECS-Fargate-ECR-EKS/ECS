EC2 Launch Type:
	+ ECS = Elastic Container Service
	+ Launch Docker containers on AWS = Launch ECS Tasks on ECS Clusters
	+ EC2 Launch Type: you must provision & maintain the infra (the EC2 Instances)
	+ Each EC2 Instance must run the ECS Agent to register in the ECS Cluster
	+ Each EC2 Instance must run the ECS Agent to register in the ECS Cluster
	+ AWS takes care of starting / stopping containers

Fargate Launch Type:
	+ Launch Docker containers on AWS
	+ You do not provision the infra (no EC2 instances to manage) => it's all serverless
	+ you just create task definitions
	+ AWS just run ECS Tasks for you based on the CPU / RAM you need
	+ to scale, just increase the number of tasks. simple - no more ec2 instances

IAM Roles for ECS:
	+ EC2 Instance Profile (EC2 Launch Type only):
		- Used by the ECS agent (ECS Exe role and ECS Task Role will uses) <<<<======
		- Makes API calls to ECS service
		- Send container logs to CloudWatch Logs
		- Pull Docker image from ECR
		- Reference sensitive data in Secrets Manager or SSM Param Store

	+ ECS Task Role (code in container uses this):
		- Allows each task to have a specific role
		- use different roles for the different ECS Services you run
		- defined in the task definition

Load Balancer Integrations:
	+ App Load Balancer supported and works for most use cases
	+ Network Load Balancer recommended only for high throughput / high perf use cases, or to pair it with
		AWS Private Link

Data volumes (EFS)
	+ Mount EFS file systems on ECS tasks
	+ Works for both EC2 and Fargate launch types
	+ Tasks running in any AZ will share the same data in the EFS file-system
	+ Fargate + EFS = Serverless
	*** S3 cannot be mounted as a file system